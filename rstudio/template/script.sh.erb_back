#!/usr/bin/env bash

# Benchmark info
echo "TIMING - Starting main script at: $(date)"

# Set working directory to home directory
#cd "${HOME}"

# Environment Setting
echo "Environment Setting"
. /etc/profile.d/00-modulepath.sh
. /etc/profile.d/rci.sh
. /etc/profile.d/z00_lmod.sh

#<%- unless context.modules.blank? -%>
# Purge the module environment to avoid conflicts
module purge

# Load the require modules
#module load <%= context.modules %>
#module load R

# List loaded modules
module list
#<%- end -%>

# List available kernels for debugging purposes
set -x
#jupyter kernelspec list
{ set +x; } 2>/dev/null
echo "TTT - $(date)"

#
# Start RStudio Server
#

# PAM auth helper used by RStudio
export RSTUDIO_AUTH="${PWD}/bin/auth"

# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="${PWD}/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "${RSESSION_WRAPPER_FILE}" << EOL
  #!/usr/bin/env bash

  # Log all output from this script
  export RSESSION_LOG_FILE="${RSTUDIO_SINGULARITY_HOST_MNT}${PWD}/rsession.log"
  exec &>>"\${RSESSION_LOG_FILE}"

  # Launch the original command
  echo "Launching rsession..."
  set -x
  exec rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "${RSESSION_WRAPPER_FILE}"

# Define launcher for `rserver` if not using Singularity
#if [[ -z "${RSTUDIO_SINGULARITY_IMAGE}" ]]; then
#  PROOT_BIN="${PROOT_BIN:-"/usr/local/proot/bin/proot-x86_64"}"
#  RSERVER_LAUNCHER="${PROOT_BIN} -b $(mktemp -d):/tmp "
#fi

# Set working directory to home directory
cd "${HOME}"

# Output debug info
#module list

# clear old session
rm $HOME/.rstudio/session-persistent-state

# Benchmark info
echo "TIMING - Starting RStudio Server at: $(date)"

# Launch the RStudio Server
echo "Starting up rserver..."
env | grep RSTUDIO
set -x
#${RSERVER_LAUNCHER}rserver \
singularity exec /share/resources/containers/singularity/rstudio_server/<%= context.version %>.img rserver \
  --www-port ${port} \
  --auth-none 0 \
  --auth-pam-helper-path "${RSTUDIO_SINGULARITY_HOST_MNT}${RSTUDIO_AUTH}" \
  --auth-encrypt-password 0 \
  --rsession-path "${RSTUDIO_SINGULARITY_HOST_MNT}${RSESSION_WRAPPER_FILE}" && env

